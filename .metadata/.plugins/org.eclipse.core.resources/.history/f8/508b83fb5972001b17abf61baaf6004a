package com.spring.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.spring.domain.Follow;
import com.spring.domain.UserVO;
import com.spring.repository.AccountRepository;
import com.spring.repository.FollowRepository;
import com.spring.security.AccountDetails;


@Controller
public class FollowController {

	@Autowired
	private AccountRepository AcReposit;
	
	@Autowired
	private FollowRepository FollowReposit;
		
	
	//팔로우
	@PostMapping("/follow/{id}")
	public @ResponseBody String follow(@AuthenticationPrincipal AccountDetails AcDetails, @PathVariable int id) {
		UserVO following = AcDetails.getVo();
		Optional<UserVO> oToUser = AcReposit.findById(id);
		UserVO follower = oToUser.get();

		Follow follow = new Follow();
		follow.setFollowing(following);
		follow.setFollower(follower);

		FollowReposit.save(follow);

		return "ok";
	}

	//언팔로우
	@DeleteMapping("/follow/{id}")
	public @ResponseBody String unFollow(@AuthenticationPrincipal AccountDetails AcDetails, @PathVariable int id) {
		UserVO following = AcDetails.getVo();
		Optional<UserVO> oToUser = AcReposit.findById(id);
		UserVO follower = oToUser.get();

		FollowReposit.deleteByFollowingIdAndFollowerId(following.getId(), follower.getId());

		List<Follow> follows = FollowReposit.findAll();
		return "ok"; 
	}
	
	@GetMapping("/follow/follow/{id}")
	public String FollowList(@PathVariable int id, @AuthenticationPrincipal AccountDetails AcDetails) {
		
		return "";
	}
}
